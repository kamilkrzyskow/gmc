{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Gothic Modding Community page","text":""},{"location":"#welcome-to-gothic-modding-community-page","title":"Welcome to Gothic Modding Community page","text":"<p>This GitHub page is designed to contain community maintained set of articles, tutorials and documentation for everything Gothic.</p> <p>Info</p> <p>The content here is not meant to be taken as the holy word of modding. We are just modders sharing our experiences, knowledge and our favorite work flows.</p> <ul> <li> <p> Discord Server</p> <p>If you have any modding related questions, or just want to talk join our discord server.</p> <p> Discord</p> </li> <li> <p> Contribution</p> <p>Feel free to open a pull request with your article or propose changes. Here is detailed contribution guide.</p> <p> How to Contibute</p> </li> <li> <p> Gothic Archive</p> <p>First two Gothic games use engine called ZenGin, developed by Piranha Bytes and Mad Scientists. If you want to know more about the history of the development, there is a heap of information on the Gothic Archive.</p> <p> Gothic Archive</p> </li> <li> <p> Repository</p> <p>Check out our GitHub repository for the site's source code and updates.</p> <p> GitHub</p> </li> </ul>"},{"location":"notready/","title":"None","text":"<p>Warning</p> <p>Sorry, this page is not ready yet! </p>"},{"location":"preferences/","title":"Preferences","text":""},{"location":"preferences/#preferences","title":"Preferences","text":"<p>This page allows to set various preferences for reading the docs:</p>"},{"location":"preferences/#color","title":"Color","text":"<p>You can change the feel of the site with a color change. </p> <p>Select accent color: </p> <p>Select hue color: </p> <p>Reset colors </p>"},{"location":"preferences/#font","title":"Font","text":"<p>You can change the font to another preset. </p> <p>Select font: Default OpenDyslexic </p>"},{"location":"preferences/#custom-css","title":"Custom CSS","text":"<p>You can add custom stylesheets. Input CSS:</p> <p> </p>"},{"location":"contribute/","title":"How to contribute","text":""},{"location":"contribute/#how-to-contribute","title":"How to contribute","text":"<p>The Gothic Modding Community is a community-driven project. We encourage people to contribute.</p> <p>This site is built with a Static Site Generator MkDocs and the Material for MkDocs theme together with multiple other MkDocs plugins.</p> <p>Prerequisites for contribution differ based on the scale and type of the contribution.</p>"},{"location":"contribute/#feedback","title":"Feedback","text":"<p>Using English, you can either open an issue via GitHub or join us on Discord.</p>"},{"location":"contribute/#direct-contribution","title":"Direct contribution","text":"<p>Direct contribution is made via creating a copy of this repository (a fork) and creating a pull request (PR) on GitHub with changes for approval.</p> <p>Don't waste time</p> <p>Please make sure that the content you are contributing does not already exist on the dev page. You can use the search tool to filter GMC for different keywords and contents.</p> <p>How to edit the source files?</p> <p>The source files for the articles are written using the Markdown <code>.md</code> file format (Markdown cheatsheet). Other than that, this site also uses Python Markdown Extensions which add more syntax rules like indented admonitions.</p>"},{"location":"contribute/#minor-changes","title":"Minor changes","text":"<p>Minor changes like fixing typos, grammatical errors or removing/adding words to paragraphs in a single file can be done quickly with the  button in the upper right corner of each article. This will open up a GitHub editing interface which will create a fork with a patch branch after modifying the file and guide the user to open up the pull request.</p> <p>Select the correct branch for the pull request</p> <p>Make sure that the pull request is directed towards the <code>dev</code> or a special <code>pre-merge</code> branch and not the <code>main</code> branch.</p>"},{"location":"contribute/#major-changes","title":"Major changes","text":"<p>More elaborate changes like editing multiple files at once, adding new articles, images, other miscellaneous files or changing the configuration of the page are easier to make via external tools on your local PC. While most of these operations can be done with the GitHub interface, it is rather cumbersome, and it may be harder to spot issues during the process as changes are not immediately visible in the browser in their final form.</p> <p>Some preparation is needed before working on the files as MkDocs requires an installation of Python on the system to run. GitHub works on top of git so an installation of git is also required. A basic familiarity with Terminal/Command Prompt/Powershell command line interfaces is helpful.</p>"},{"location":"contribute/#system-setup-video","title":"System setup (video)","text":"<p>Firstly, you should install Python. You can follow this step-by-step tutorial for Windows or macOS on how to install Python.</p> <p>This video is from 2017?!</p> <p>The process of installing Python hasn't changed since that point. However, please install the latest version of Python 3.</p> <p>To work remotely with GitHub, you can install the latest version of git on your system following this tutorial.</p> <p>If you just plan on editing the content of the articles with Markdown, you can simply install the latest version of Visual Studio Code for GUI git management and Markdown preview or work with any other familiar text editor and omit the environment setup.</p> <p>If you are planning to do some elaborate Python programming, you can follow this step-by-step tutorial for Windows or macOS on how to set up an environment with Visual Studio Code.</p>"},{"location":"contribute/#system-setup-text","title":"System setup (text)","text":"<p>To prepare your system to run the project follow those instructions:</p> <ol> <li> <p>Install the latest version of Python .     Make sure to select the \"Add Python to PATH\" option during the installation process.</p> </li> <li> <p>Open up a Terminal/Command Prompt (cmd)/Powershell window.</p> </li> <li> <p>Check that Python was properly installed with this command (might need a terminal restart):</p> <pre><code>python --version\n</code></pre> </li> <li> <p>Install the latest version of git following this tutorial.</p> </li> <li> <p>Check that git was properly installed with this command (might need a terminal restart):</p> <pre><code>git --version\n</code></pre> </li> <li> <p>(optional) Install the latest version of Visual Studio Code for GUI git management and Markdown preview.</p> </li> </ol>"},{"location":"contribute/#working-locally","title":"Working locally","text":"<p>In order to work locally:</p> <ol> <li>Create a fork on GitHub.</li> <li>On your local PC navigate to a directory where you want to clone your forked repository and open a Terminal window inside.</li> <li> <p>Clone the forked repository, using this command:</p> <pre><code>git clone https://github.com/user-name/forked-repository-name.git &lt;DIR-PATH&gt;\n</code></pre> <p>Instead of <code>https://github.com/user-name/forked-repository-name.git</code> use your own link which can be found after clicking on the green <code>&lt;&gt; Code</code> button and selecting the <code>HTTPS</code> tab.</p> <p>Replace the <code>&lt;DIR-PATH&gt;</code> with a path to a directory or <code>.</code> if you're inside the directory you want the project files to be cloned into.</p> <p>This will automatically create a remote <code>origin</code> repository pointing to your own fork.</p> </li> <li> <p>Add the remote <code>upstream</code> repository using this command:</p> <pre><code>git remote add upstream https://github.com/Gothic-Modding-Community/gmc.git\n</code></pre> </li> <li> <p>(optional) Create a Virtual Environment and activate it.</p> <p>If you work on multiple Python projects, it might be worthwhile to create a Virtual Environment for each project to have separate library directories with installed modules/plugins.</p> <pre><code>python -m venv venv\n</code></pre> <p>This will create a <code>venv</code> directory inside the current Terminal directory. Please keep that name as it's added to the <code>.gitignore</code> project file.</p> <p>Depending on the system, use one of these commands to activate the virtual environment.</p> <p></p>Linux / macOS<pre><code>source venv/bin/activate\n</code></pre> Windows Powershell<pre><code>venv\\Scripts\\activate.ps1\n</code></pre> Windows Command Prompt (cmd)<pre><code>venv\\Scripts\\activate.bat\n</code></pre> <p>After activation there will be a <code>(venv)</code> indicator near the Terminal prompt.</p> <p>Don't close the Terminal</p> <p>The virtual environment must be activated each time a new Terminal window is opened.</p> </li> <li> <p>Install MkDocs with plugins using this command:</p> <pre><code>pip install -r requirements.txt\n</code></pre> <p>This will install all dependencies.</p> </li> <li> <p>Fetch the git history from <code>upstream</code> using this command:</p> <pre><code>git fetch upstream\n</code></pre> </li> <li> <p>Checkout a new local branch based on the <code>upstream</code> <code>dev</code> branch:</p> <pre><code>git checkout -b name-of-branch --track upstream/dev\n</code></pre> <p>An appropriate name for a branch is either a feature name or short description of what it changes - for example <code>3ds-articles</code>, <code>fix-typos-for-contribution</code>. They do not have to be elaborate, up-to 4 words suffices.</p> </li> <li> <p>Start a server with MkDocs using this command:</p> <pre><code>mkdocs serve\n</code></pre> <p>Visit the local site with this url <code>http://127.0.0.1:8000/gmc/</code>. Any time you make change to any file, the website will rebuild itself and your browser will auto-refresh.</p> <p>The server may be closed using the <code>Control-C</code> shortcut while in the terminal/console.</p> </li> <li> <p>When you are satisfied with a part of work, add and commit the files using these commands:</p> <pre><code>git add .\ngit commit -m \"add 3 articles about ZenGin\"\n</code></pre> <p>An appropriate commit message should be a sentence describing the changes.</p> </li> <li> <p>When you are finished with the work, push the branch to <code>origin</code> using this command:</p> <pre><code>git push origin name-of-branch\n</code></pre> </li> <li> <p>Create the pull request to the appropriate branch.</p> <p>After pushing your local branch to the remote <code>origin</code>, there will be a link available in the Terminal window. Use it to create the pull request using the pushed branch.</p> </li> <li> <p>Another contribution:</p> <p>Before contributing again, always use this command: </p><pre><code>git fetch upstream \n</code></pre> to make sure that you have an up-to-date <code>upstream</code> git history. Follow then from step 8. <pre><code>git status\n</code></pre> <p>This command allows to check, if there are any changes in the project compared to the <code>upstream</code> repository.</p> </li> </ol>"},{"location":"contribute/#build-preferences","title":"Build preferences","text":"<p>While working with the project, it's possible to set various environmental variables to configure it to your own preferences:</p> <ul> <li><code>GMC_DEV_LOCALE</code> - is a 2-character language identifier (ex. <code>en</code>, <code>pl</code>), it sets the development language of the site. This will enforce that language to be the default and only built language. Helps to decrease build time and allows to easily change the language without modyfying the config file. Because of changes in the <code>mkdocs-static-i18n</code> plugin, this is the only way to temporarily change the default language</li> <li><code>GMC_BUILD_ALTERNATES</code> - <code>True</code> or <code>False</code> value, activates the site build to also include alternate languages apart of the default language. Default behaviour is to omit alternates to decrease build time.</li> <li><code>GMC_ENABLE_ON_PUBLISH</code> - <code>True</code> or <code>False</code> value, activates all of the final build procedures, like adding of the last modified date, minifying of the resources etc. </li> </ul> <p>Environmental variables can be set temporarily for the currently open Terminal window:</p> Linux<pre><code>export GMC_DEV_LOCALE=en export GMC_BUILD_ALTERNATES=False; mkdocs serve\n</code></pre> Windows Powershell<pre><code>$env:GMC_DEV_LOCALE=\"en\"\n$env:GMC_BUILD_ALTERNATES=\"False\"\nmkdocs serve\n</code></pre> Windows Command Prompt (cmd)<pre><code>set GMC_DEV_LOCALE=en\nset GMC_BUILD_ALTERNATES=False\nmkdocs serve\n</code></pre>"},{"location":"contribute/#build-performance","title":"Build performance","text":"<p>To speed up the build process during development make sure that only 1 language is built, and consider using the <code>--dirtyreload</code> option:</p> <pre><code>mkdocs serve --dirtyreload\n</code></pre> <p>This will cause only changed <code>.md</code> files to rebuild. However, if you make changes to a template in the <code>overrides</code> directory, no changes will be visible after the rebuild, because template modification requires a full rebuild.</p>"},{"location":"contribute/#submit-a-file","title":"Submit a file","text":"<p>If working with git or Markdown is not viable or possible for you, you can submit files in a Google Docs format on the GMC Discord server and we will format and upload it to the page.</p> <p>Only New English Content</p> <p>This option is limited to new content in English. We can't deal with translations in this manner. For translations send a translated <code>.md</code> file via a feedback channel, if you don't want to work directly with git, nor add the file via the GitHub interface.</p>"},{"location":"contribute/#translations","title":"Translations","text":"<p>To provide multilingual support, our site uses the MkDocs i18n plugin.</p>"},{"location":"contribute/#add-new-language-support","title":"Add new language support","text":"<p>To support a new language it needs to be added:</p> <p>Indentation is important</p> <p>You must preserve the correct amount of indentation, aka spacing between entries.</p> <ol> <li> <p>In the <code>mkdocs.yml</code> configuration, in this example we're adding the <code>xx</code> language:</p> <pre><code>plugins:\n  - i18n:\n      # ...\n      languages:\n        en:\n          name: en - English\n          build: true\n        xx:\n          name: xx - Language Name\n          build: true\n</code></pre> </li> <li> <p>In the <code>overrides/main.html</code> file to add the announcement text for untranslated content:</p> <pre><code>{%\n    set announcement = {\n        \"en\": \"This page has not yet been translated into LANGUAGE, therefore it is displayed in English.\",\n        \"xx\": \"yyy\",\n    }\n%}\n{%\n    set call_to_action = {\n        \"en\": \"Support us and translate!\",\n        \"xx\": \"yyy\",\n    }\n%}\n</code></pre> </li> <li> <p>Visit the official theme site.      Make sure that the theme translation is complete there. If it's not, just follow their contribution guide and come back here, there is no need to wait for the changes in the theme.</p> </li> </ol>"},{"location":"contribute/#add-translated-pages","title":"Add translated pages","text":"<p>Each <code>.md</code> file in the <code>docs</code> directory can have a translated version. To add a translation for a given language create a copy with an added language suffix. For example <code>index.md</code> will become <code>index.xx.md</code> for the <code>xx</code> language based on the settings in the <code>mkdocs.yml</code> file.</p> <p>Each untranslated article has the  button in the upper right corner next to the title. It allows to quickly add the translation via the GitHub interface without the need for local file configuration.</p>"},{"location":"genome/","title":"Genome engine","text":""},{"location":"genome/#genome-engine","title":"Genome engine","text":"<p>Genome engine is new engine by Piranha Bytes created for the game Gothic 3 and later used for the Risen and ELEX series of games.</p>"},{"location":"genome/general_info/object_persistence/","title":"Object persistence","text":""},{"location":"genome/general_info/object_persistence/#object-persistence","title":"Object persistence","text":"<p>Please note the following warning about Risen 2, 3 and ELEX 1 and 2</p> <p>The following information only applies to Gothic 3 (2006) and Risen (2009). While newer Genome engine games share the same overall concepts, they have significant implementation differences that warrant their own section.</p> <p>The engine is, due to the nature of the games themselves, required to store and load a vast amount of different types of data from the user's hard-drive. In order to streamline this parsing and/or serialization process, Genome implements an object persistence system using its own built-in runtime type information (RTTI) system.</p> <p>Any class derived from <code>bCObjectBase</code> may declare its own member properties in such a way that when the object is then written into a file using the <code>bCAccessorPropertyObject</code> class, its associated properties will be automatically serialized into the stream by using special preprocessor macros. When the object is read back from the file, the class will be automatically initialized using the stored members.</p> <p>Additionally, classes may overload the <code>Read</code> and <code>Write</code> (<code>OnRead</code> and <code>OnWrite</code> in Risen 1) virtual methods that allow the class to save additional data required during parsing such as paths to other necessary files.</p> <p>As this system is quite flexible, it is used to store most of the game's data, from meshes, animations and textures to level and quest data. This is quite different from ZenGin, as its object persistence system is only used for worlds, saves, output units and parts of compiled meshes.</p>"},{"location":"genome/general_info/object_persistence/#file-format","title":"File format","text":""},{"location":"genome/general_info/object_persistence/#files","title":"Files","text":"<pre><code>struct bCIOStream\n{\n    char data[];\n};\n</code></pre> <pre><code>struct eCArchiveFile\n{\n    char8_t  magic[8];  // \"GENOMFLE\"\n    uint16_t version;   // 0001\n    uint32_t offset;\n\n    char data[];\n\n    uint32_t magic;    // DEADBEEF\n    uint8_t  version;  // 01\n    uint32_t count;\n    for( Count )\n    {\n        uint16_t length;\n        char8_t  string[length];  // (ASCII)\n    }\n};\n</code></pre>"},{"location":"genome/general_info/object_persistence/#bcaccessorpropertyobject","title":"bCAccessorPropertyObject","text":"<pre><code>bCAccessorPropertyObject::Read \n{\n    uint16_t    version;    // 0x0001\n    bool        hasPropertyObject;\n    if (hasPropertyObject)\n    {\n        bCPropertyObjectSingleton::ReadObject\n        {\n            uint16_t    version;    // 0x0001\n            bool        isPersistable;    // 0x01 (GETrue)\n            bCString    className;\n            bCPropertyObjectFactory::ReadObject\n            {\n                uint16_t    version;        // 0x0001\n                bool        isRoot;            // 0x00 (GEFalse)\n                uint16_t    classVersion;\n                bTPropertyObject&lt;%,%&gt;::Read\n                {\n                    bCPropertyObjectBase::Read\n                    {\n                        uint16_t version;    // 0x00C9 (201)\n                    }\n                    uint32_t size;\n                }\n                bTPropertyObject&lt;%,%&gt;::ReadData\n                {\n                    bCPropertyObjectBase::ReadData\n                    {\n                        uint16_t version;    // 0x00C9 (201)\n                        uint32_t count;\n                        for (count)\n                        {\n                            bCString    name;\n                            bCString    type;\n                            uint16_t    version;    // 0x001E (30)\n                            uint32_t    size;\n                            uint8_t        value[size];\n                        }\n                    }\n                    %::Read\n                    {\n                        // ClassName::OnRead/OnWrite()\n                        // uint16_t ClassVersion; ...\n                    }\n                }\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"genome/general_info/object_persistence/#ecprocessibleelement","title":"eCProcessibleElement","text":"Gothic 3Risen <pre><code>eCProcessibleElement::Load\n{\n    uint32_t magic; // 0xD0DEFADE\n    bCAccessorPropertyObject::Read\n    {\n        // Look above for bCAccessorPropertyObject definition\n    }\n}\n</code></pre> <pre><code>eCProcessibleElement::Load\n{\n    bCAccessorPropertyObject::Read\n    {\n        // Look above for bCAccessorPropertyObject definition\n    }\n}\n</code></pre>"},{"location":"genome/general_info/object_persistence/#implementation","title":"Implementation","text":""},{"location":"genome/general_info/object_persistence/#a-practical-example","title":"A practical example","text":"<p>Let's propose that we have a class which is declared like so:</p> <pre><code>class gCMyClass : public bCObjectRefBase\n{\npublic:\n\n    gCMyClass()                {}\n    virtual ~gCMyClass()    {}\n\n    virtual bEResult Write(bCOStream&amp;); // OnWrite for Risen\n    virtual bEResult Read(bCIStream&amp;);  // OnRead for Risen\n\nprivate:\n\n    DECLARE_PROPERTY(myInt, int);\n\n    int someData;\n\n};\n</code></pre> <p>The hypothetical class then implements these virtual functions:</p> <pre><code>bEResult gCMyClass::Write(bCOStream&amp; file)\n{\n    file &lt;&lt; someData;\n    return bEResult_Ok;\n}\n\nbEResult gCMyClass::Read(bCIStream&amp; file)\n{\n    file &gt;&gt; someData;\n    return bEResult_Ok;\n}\n</code></pre> <p>We then initialize the class in the following way:</p> <pre><code>gCMyClass object;\nobject.myInt = 1;\nobject.someData = 1;\n</code></pre> <p>If we now serialized, or to use the engine's term \"archived\", this instance into an ASCII stream, the result would look like this:</p> <pre><code>\n</code></pre>"},{"location":"genome/tools/","title":"Tools","text":""},{"location":"genome/tools/#tools","title":"Tools","text":"<p>Piranha Bytes did not release a modkit for their Genome engine, but the modding community has released a wide range of tools to work with the game's files and the engine itself.</p> <p>Info</p> <p>This page is under construction, for now, only handful of links are present.</p>"},{"location":"genome/tools/#gothic-3-sdk","title":"Gothic 3 SDK","text":"<p>Georgeto, inspired by NicoDE's Risen SDK, has created an SDK for Gothic 3. It can be used to manipulate the engine in the similar way Union is able to manipulate ZenGin. GitHub repository</p>"},{"location":"blog/community-news/introducing-community-posts/","title":"Introducing Community Posts","text":"","tags":["Documentation","i18n","MkDocs"]},{"location":"blog/community-news/introducing-community-posts/#introducing-community-posts","title":"Introducing Community Posts","text":"<p>Enabled by the built-in Blog plugin of Material for MkDocs. </p> <p>Welcome to the new blog section of the GMC, where users can share tutorials, guides, analytical  articles, useful snippets, promote their modding tools, and more.</p> <p>This addition brings greater flexibility to content creation on our website.</p>","tags":["Documentation","i18n","MkDocs"]},{"location":"blog/community-news/introducing-community-posts/#why-a-blog","title":"Why a blog?","text":"<p>Throughout the history of the Gothic Modding Community, we've encountered a recurring issue: some  content doesn't fit neatly into the \"docs\" format. To address this, we needed a new section.  Initially, we considered a simple new area, but then the Blog plugin was announced for the Community version of the Material theme. We decided to wait for its release.</p> <p>While waiting, we added support for i18n localization to attract new users for translation and  content creation. However, despite our efforts, we didn't gain many regular contributors.  Additionally, delays caused by the GitHub/PayPal issues further postponed the Blog plugin's release.</p> <p>The Blog plugin eventually arrived in the Community version. Unfortunately, we discovered that the  mkdocs-static-i18n plugin couldn't handle the internally generated blog pages. We hoped for a fix upstream, but the issue persisted.</p>","tags":["Documentation","i18n","MkDocs"]},{"location":"blog/community-news/introducing-community-posts/#i18n-support","title":"i18n support","text":"<p>Not supported</p> <p>As of July 02, 2024, the i18n plugin doesn't support blog pages.</p> <p>Given the complexity of this issue, it likely requires overriding the Blog plugin's internal code.  This could prevent users with localization from updating, creating a problematic situation for  @ultrabug, who would need to constantly make fixes. The issue is further complicated by different  versions of the Blog plugin for the Community and Insiders editions.</p> <p>This applies to us as well. Despite many fixes and patches added to our docs on top of other  plugins, we don't plan to add i18n support for the blog ourselves to maintain general flexibility.  Especially since our community is still primarily composed of English speakers.</p>","tags":["Documentation","i18n","MkDocs"]},{"location":"blog/community-news/introducing-community-posts/#who-can-add-posts-what-topics-are-allowed","title":"Who can add posts, what topics are allowed?","text":"<p>We don't plan to restrict posts too much. As long as they are not meme content, they will likely be  accepted. For up-to-date guidelines, you can read the [how-to guide].</p>","tags":["Documentation","i18n","MkDocs"]},{"location":"blog/community-news/introducing-community-posts/#comments","title":"Comments","text":"<p>Let us know what do you think about the new feature!</p>","tags":["Documentation","i18n","MkDocs"]},{"location":"blog/tutorials/guidelines-for-community-posts/","title":"Guidelines For Community Posts","text":"","tags":["Best Practices","Documentation","How-To","MkDocs"]},{"location":"blog/tutorials/guidelines-for-community-posts/#guidelines-for-community-posts","title":"Guidelines For Community Posts","text":"<p>Question: What are the requirements for my blog post to be added here? Answer: There are almost no requirements, other than managing files properly.</p> <p>Also read the general contribution guide for setup instructions. </p>","tags":["Best Practices","Documentation","How-To","MkDocs"]},{"location":"blog/tutorials/guidelines-for-community-posts/#technical-requirements","title":"Technical Requirements","text":"","tags":["Best Practices","Documentation","How-To","MkDocs"]},{"location":"blog/tutorials/guidelines-for-community-posts/#creation-date","title":"Creation Date","text":"<p>Each post must have a creation date used for sorting and ordering. The <code>date</code> key can be a simple  string with the creation date or, an object structure with sub-keys <code>created</code> and <code>updated</code>.</p> <pre><code>date: 2024-07-01\n</code></pre> <p>Reference</p>","tags":["Best Practices","Documentation","How-To","MkDocs"]},{"location":"blog/tutorials/guidelines-for-community-posts/#at-least-one-category","title":"At Least One Category","text":"<p>This blog uses category-based URLs instead of default time-based post URLs. The <code>categories</code> key is  a list of strings.</p> <pre><code>categories:\n  - Tutorials\n</code></pre> <p>Reference</p>","tags":["Best Practices","Documentation","How-To","MkDocs"]},{"location":"blog/tutorials/guidelines-for-community-posts/#mandatory-opinionated-requirements","title":"Mandatory Opinionated Requirements","text":"","tags":["Best Practices","Documentation","How-To","MkDocs"]},{"location":"blog/tutorials/guidelines-for-community-posts/#use-categories-defined-in-the-mkdocsyml-config","title":"Use Categories Defined in the mkdocs.yml Config","text":"<p>Some categories can be used for slugs, while others cannot. If you want to add a new one, please ask first. To see an up-to-date list, check the <code>categories_allowed</code> option in the <code>mkdocs.yml</code> file.  For more granularity, use tags, which offer more flexibility. You can see the index of used tags  here.</p>","tags":["Best Practices","Documentation","How-To","MkDocs"]},{"location":"blog/tutorials/guidelines-for-community-posts/#keep-the-files-organized","title":"Keep the Files Organized","text":"<p>Place posts in the <code>blog/posts</code> directory under a subdirectory matching the category slug (lowercase with <code>_</code> in place of spaces):</p> <p>Filenames should use <code>_</code> for spaces and should be lowercase.</p> <pre><code>blog/posts/community_news/welcome.md\nblog/posts/tutorials/how_to_write_blog_posts.md\n</code></pre> <p>For assets specific to the blog section:</p> <p>Note the lack of <code>posts</code>.</p> <pre><code>assets/blog/images/tutorials/image.png\n</code></pre>","tags":["Best Practices","Documentation","How-To","MkDocs"]},{"location":"blog/tutorials/guidelines-for-community-posts/#assets-like-images-need-to-be-placed-under-the-overrides-path","title":"Assets Like Images Need to Be Placed Under the <code>overrides</code> Path","text":"<p>Due to the rest of the site using multiple languages (i18n), assets are kept in the overrides  directory to reduce duplication of files after the build. The overrides directory is placed on top  of the built directory so all relative paths are the same as if the files were in the <code>docs</code>  directory. Use a couple of <code>../</code> to get to the root of the built site and access the asset:</p> <p></p> <pre><code>../../../assets/images/gmc_logo.png\n</code></pre> <p>So in the example before:</p> <pre><code>../../../assets/blog/images/tutorials/image.png\n</code></pre>","tags":["Best Practices","Documentation","How-To","MkDocs"]},{"location":"blog/tutorials/guidelines-for-community-posts/#optional-opinionated-recommendations","title":"Optional Opinionated Recommendations","text":"","tags":["Best Practices","Documentation","How-To","MkDocs"]},{"location":"blog/tutorials/guidelines-for-community-posts/#keep-keys-and-values-in-the-front-matter-in-alphabetical-order","title":"Keep Keys and Values in the Front-Matter in Alphabetical Order","text":"<p>This will make it easier to spot mistakes.</p>","tags":["Best Practices","Documentation","How-To","MkDocs"]},{"location":"blog/tutorials/guidelines-for-community-posts/#maintain-a-strict-line-width-limit","title":"Maintain a Strict Line Width Limit","text":"<p>It will make it easier to read and spot mistakes in Markdown. <code>mkdocs-material</code> uses an 80-character limit, which is a bit narrow. Currently, the CSS settings for the width of the content are roughly  ~140 characters, which is a bit wide. This Markdown file uses a 100-character limit. Keep things  reasonable and use the same width throughout the file, and do not break lines prematurely.</p>","tags":["Best Practices","Documentation","How-To","MkDocs"]},{"location":"blog/tutorials/guidelines-for-community-posts/#use-alternative-link-definitions","title":"Use Alternative Link Definitions","text":"<p>To avoid issues with long lines, define links before the next heading using this syntax:  <code>[text]: url</code>. Then you can organically use the <code>[text]</code> in your paragraph, and it will be converted  to a URL, or use <code>[text][defined url]</code> to wrap the <code>text</code> using a defined URL.</p>","tags":["Best Practices","Documentation","How-To","MkDocs"]},{"location":"blog/tutorials/guidelines-for-community-posts/#avoid-name-conflicts","title":"Avoid Name Conflicts","text":"<p>If a name conflict occurs, don't resort to adding a lazy <code>-2</code> at the end. Instead, ensure your name  is distinct for better searchability. For example, instead of <code>result.png</code>, use a more specific name like <code>blender_modifier_result.png</code> or the slug of the blog post you're writing.</p>","tags":["Best Practices","Documentation","How-To","MkDocs"]},{"location":"blog/tutorials/guidelines-for-community-posts/#add-a-h2-comments-heading-at-the-bottom","title":"Add a H2 Comments Heading at the Bottom","text":"<p>This will add a TOC element for users to easily skip the post and read the comments. The RSS plugin  also expects this heading to exist.</p>","tags":["Best Practices","Documentation","How-To","MkDocs"]},{"location":"blog/tutorials/guidelines-for-community-posts/#comments","title":"Comments","text":"<p>Let us know what you think about these guidelines!</p>","tags":["Best Practices","Documentation","How-To","MkDocs"]},{"location":"blog/category/community-news/","title":"Community News","text":""},{"location":"blog/category/tutorials/","title":"Tutorials","text":""},{"location":"blog/tags/","title":"Tags","text":""},{"location":"blog/tags/#tags","title":"Tags","text":""},{"location":"blog/tags/#best-practices","title":"Best Practices","text":"<ul> <li>Guidelines For Community Posts</li> </ul>"},{"location":"blog/tags/#documentation","title":"Documentation","text":"<ul> <li>Introducing Community Posts</li> <li>Guidelines For Community Posts</li> </ul>"},{"location":"blog/tags/#how-to","title":"How-To","text":"<ul> <li>Guidelines For Community Posts</li> </ul>"},{"location":"blog/tags/#mkdocs","title":"MkDocs","text":"<ul> <li>Introducing Community Posts</li> <li>Guidelines For Community Posts</li> </ul>"},{"location":"blog/tags/#i18n","title":"i18n","text":"<ul> <li>Introducing Community Posts</li> </ul>"},{"location":"pl/","title":"Witamy na stronie Gothic Modding Community","text":""},{"location":"pl/#witamy-na-stronie-gothic-modding-community","title":"Witamy na stronie Gothic Modding Community","text":"<p>Ta strona GitHub jest zaprojektowana w celu zawarcia zbioru artyku\u0142\u00f3w, poradnik\u00f3w oraz innej dokumentacji o Gothicu utrzymywanych przez spo\u0142eczno\u015b\u0107.</p> <p>Informacja</p> <p>Zawarto\u015b\u0107 strony nie jest przeznaczona, aby by\u0107 uznan\u0105 za \u015bwi\u0119te s\u0142owa moddingu. Jeste\u015bmy tylko modderami dziel\u0105cymi si\u0119 do\u015bwiadczeniami, wiedz\u0105 oraz naszym ulubionym tokiem pracy.</p> <ul> <li> <p> Serwer Discord</p> <p>Je\u015bli masz jakie\u015b pytania zwi\u0105zane z modowaniem lub po prostu chcesz porozmawia\u0107, do\u0142\u0105cz do naszego serwera Discord.</p> <p> Discord</p> </li> <li> <p> Udzielanie si\u0119</p> <p>Nie kr\u0119puj si\u0119, aby otworzy\u0107 pro\u015bb\u0119 o po\u0142\u0105czenie (ang. pull request) z twoim artyku\u0142em, lub z propozycj\u0105 zmian. Tutaj znajdziesz pe\u0142n\u0105 instrukcje jak to zrobi\u0107.</p> <p> Jak Si\u0119 Udzieli\u0107</p> </li> <li> <p> Gothic Archive</p> <p>Dwie pierwsze cz\u0119\u015bci gier Gothic korzystaj\u0105 z silnika o nazwie ZenGin, stworzonego przez Piranha Bytes oraz grup\u0119 programist\u00f3w o nazwie Mad Scientists. Je\u017celi chcesz wiedzie\u0107 wi\u0119cej o historii tworzenia, to jest masa informacji na Gothic Archive.</p> <p> Gothic Archive</p> </li> <li> <p> Repozytorium</p> <p>Sprawd\u017a nasze repozytorium GitHub, aby uzyska\u0107 kod \u017ar\u00f3d\u0142owy strony i informacje o aktualizacjach.</p> <p> GitHub</p> </li> </ul>"},{"location":"pl/preferences/","title":"Preferencje","text":""},{"location":"pl/preferences/#preferencje","title":"Preferencje","text":"<p>Ta strona pozwala ustawi\u0107 r\u00f3\u017cne preferencje do czytania dokumentacji:</p>"},{"location":"pl/preferences/#kolor","title":"Kolor","text":"<p>Mo\u017cesz zmieni\u0107 nastr\u00f3j strony poprzez zmian\u0119 koloru. </p> <p>Wybierz kolor akcentuj\u0105cy: </p> <p>Wybierz kolor odcienia: </p> <p>Zresetuj kolory </p>"},{"location":"pl/preferences/#czcionka","title":"Czcionka","text":"<p>Mo\u017cesz zmieni\u0107 czcionk\u0119 na predefiniowany. </p> <p>Wybierz czcionk\u0119: Domy\u015blna OpenDyslexic </p>"},{"location":"pl/preferences/#w\u0142asny-css","title":"W\u0142asny CSS","text":"<p>Mo\u017cesz doda\u0107 niestandardowe arkusze styl\u00f3w. Wprowad\u017a CSS:</p> <p> </p>"},{"location":"pl/contribute/","title":"Jak si\u0119 udzieli\u0107","text":""},{"location":"pl/contribute/#jak-si\u0119-udzieli\u0107","title":"Jak si\u0119 udzieli\u0107","text":"<p>Gothic Modding Community jest projektem nap\u0119dzanym przed spo\u0142eczno\u015b\u0107. Zach\u0119camy osoby do wnoszenia swojego wk\u0142adu.</p> <p>Ta strona jest budowana przy pomocy statycznego generatora stron MkDocs oraz sk\u00f3rki Material for MkDocs, wraz z wieloma innymi wtyczkami do MkDocs.</p> <p>Zale\u017cnie od skali i typu kontrybucji, trzeba spe\u0142ni\u0107 inne wymagania wst\u0119pne.</p>"},{"location":"pl/contribute/#zg\u0142oszenia","title":"Zg\u0142oszenia","text":"<p>Po angielsku mo\u017cna zg\u0142osi\u0107 problem lub inny komentarz o funkcjonowaniu strony poprzez otworzenie problemu (ang. issue) na serwisie GitHub albo do\u0142\u0105cz do nas na platformie Discord.</p>"},{"location":"pl/contribute/#wk\u0142ad-bezpo\u015bredni","title":"Wk\u0142ad bezpo\u015bredni","text":"<p>Wk\u0142ad bezpo\u015bredni wykonuje si\u0119 poprzez stworzenie kopii tego repozytorium (ang. fork) oraz stworzenie pro\u015bby o po\u0142\u0105czenie (ang. pull request PR) na serwisie GitHub wraz ze zmianami do zatwierdzenia.</p> <p>Nie zmarnuj czasu</p> <p>Prosz\u0119 si\u0119 upewni\u0107, \u017ce tre\u015b\u0107, jaka zostanie dodana, nie wyst\u0119puje ju\u017c na wersji dev strony. Mo\u017cna skorzysta\u0107 z funkcjonalno\u015bci wyszukiwania, \u017ceby przefiltrowa\u0107 GMC r\u00f3\u017cnymi s\u0142owami kluczowymi i tre\u015bciami.</p> <p>Jak edytowa\u0107 pliki \u017ar\u00f3d\u0142owe?</p> <p>Pliki \u017ar\u00f3d\u0142owe artyku\u0142\u00f3w s\u0105 pisane wykorzystuj\u0105c format plik\u00f3w Markdown <code>.md</code> (Markdown cheatsheet). Poza tym ta strona wykorzystuje wtyczk\u0119 Python Markdown Extensions, kt\u00f3ra rozszerza sk\u0142adni\u0119 o dodatkowe zasady pozwalaj\u0105ce na wstawienie wzmianek jak ta, kt\u00f3r\u0105 w\u0142a\u015bnie czytasz.</p>"},{"location":"pl/contribute/#mniejsze-zmiany","title":"Mniejsze zmiany","text":"<p>Mniejsze zmiany, jak poprawianie b\u0142\u0119d\u00f3w ortograficzny, gramatycznych, czy usuwanie/dodawanie s\u0142\u00f3w do akapit\u00f3w w jednym pliku, mog\u0105 by\u0107 zrobione szybko poprzez klikni\u0119cie przycisku  w prawym g\u00f3rnym rogu artyku\u0142u. Otworzy to interfejs edytowania pliku w serwisie GitHub, kt\u00f3re po zapisaniu zmian, automatycznie utworzy kopi\u0119 (ang. fork) oraz ga\u0142\u0105\u017a (ang. brach) z \u0142atk\u0105, a nast\u0119pnie otworzy pro\u015bb\u0119 o po\u0142\u0105czenie (ang. pull request) wzgl\u0119dem ga\u0142\u0119zi <code>dev</code>.</p> <p>Poprawna ga\u0142\u0105\u017a dla pro\u015bby o po\u0142\u0105czenie</p> <p>Upewnij si\u0119, \u017ce pro\u015bba o po\u0142\u0105czenie (ang. pull request) jest skierowana do ga\u0142\u0119zi <code>dev</code> albo specjalnej ga\u0142\u0119zi <code>pre-merge</code>, a nie do ga\u0142\u0119zi <code>main</code>.</p>"},{"location":"pl/contribute/#wi\u0119ksze-zmiany","title":"Wi\u0119ksze zmiany","text":"<p>Bardziej z\u0142o\u017cone zmiany takie jak, edycja wielu plik\u00f3w naraz, dodawanie nowych artyku\u0142\u00f3w, obrazk\u00f3w, czy innych plik\u00f3w, albo zmiana konfiguracji strony jest \u0142atwiej zrobi\u0107 poprzez u\u017cycie zewn\u0119trznych narz\u0119dzi na lokalnym PC. Wi\u0119kszo\u015b\u0107 z tych operacji mo\u017cna zrobi\u0107 poprzez interfejs serwisu GitHub, ale jest to raczej uci\u0105\u017cliwe oraz trudniej zauwa\u017cy\u0107 problemy wynikaj\u0105ce z procesu zmian, poniewa\u017c nie s\u0105 one widoczne w przegl\u0105darce w ich ostatecznej formie.</p> <p>Troch\u0119 przygotowa\u0144 jest potrzebnych przed rozpocz\u0119ciem prac nad plikami, poniewa\u017c do dzia\u0142ania MkDocs wymaga zainstalowanego w systemie Pythona. GitHub dzia\u0142a nad systemem kontroli wersji git, wi\u0119c jego instalacja jest te\u017c wymagana. Podstawowa znajomo\u015b\u0107 obs\u0142ugi Terminala/Konsoli polece\u0144/Powershell jest pomocna.</p>"},{"location":"pl/contribute/#przygotowanie-systemu-wideo","title":"Przygotowanie Systemu (wideo)","text":"<p>Po pierwsze, trzeba zainstalowa\u0107 Python. Mo\u017cna pod\u0105\u017ca\u0107 wed\u0142ug tego poradnika krok po kroku dla Windowsa albo macOS jak zainstalowa\u0107 Python.</p> <p>Wideo jest z 2017?!</p> <p>Proces instalacji Pythona nie zmieni\u0142 si\u0119 od tamtego czasu. Jednak\u017ce prosz\u0119 instalowa\u0107 najnowsz\u0105 wersj\u0119 Python 3.</p> <p>Aby m\u00f3c pracowa\u0107 zdalnie z GitHub, mo\u017cna zainstalowa\u0107 najnowsz\u0105 wersj\u0119 git, pod\u0105\u017caj\u0105c wed\u0142ug tego poradnika.</p> <p>Je\u017celi planujesz tylko edytowa\u0107 zawarto\u015b\u0107 artyku\u0142\u00f3w Markdown, mo\u017cesz po prostu zainstalowa\u0107 najnowsz\u0105 wersj\u0119 Visual Studio Code, \u017ceby mie\u0107 interfejs graficzny do zarz\u0105dzania git oraz podgl\u0105d Markdown, albo pracuj z dowolnym znanym edytorem tekstu i omi\u0144 konfiguracj\u0119 \u015brodowiska.</p> <p>Je\u017celi planujesz bardziej z\u0142o\u017cone programowanie w Python, mo\u017cesz pod\u0105\u017cy\u0107 wed\u0142ug tego poradnika krok po kroku dla Windowsa lub macOS jak skonfigurowa\u0107 \u015brodowisko developerskie z Visual Studio Code (VS Code).</p>"},{"location":"pl/contribute/#przygotowanie-systemu-tekst","title":"Przygotowanie Systemu (tekst)","text":"<p>\u017beby przygotowa\u0107 system do uruchomienia projektu lokalnie, pod\u0105\u017caj wed\u0142ug tych instrukcji.</p> <ol> <li> <p>Zainstaluj najnowsz\u0105 wersj\u0119 Pythona.     Upewnij si\u0119, \u017ceby zaznaczy\u0107 opcj\u0119 \"Add Python to PATH\" podczas instalacji.</p> </li> <li> <p>Otw\u00f3rz okno Terminala/Konsoli polece\u0144/PowerShell.</p> </li> <li> <p>Sprawd\u017a, \u017ce instalacja Pythona by\u0142a pomy\u015blna, korzystaj\u0105c z tego polecenia (mo\u017cliwa jest potrzeba restartu okna konsoli):</p> <pre><code>python --version\n</code></pre> </li> <li> <p>Zainstaluj najnowsz\u0105 wersj\u0119 git, pod\u0105\u017caj\u0105c wed\u0142ug tego poradnika.</p> </li> <li> <p>Sprawd\u017a, \u017ce instalacja git by\u0142a pomy\u015blna, korzystaj\u0105c z tego polecenia (mo\u017cliwa jest potrzeba restartu okna konsoli):</p> <pre><code>git --version\n</code></pre> </li> <li> <p>(opcjonalne) Zainstaluj najnowsz\u0105 wersj\u0119 Visual Studio Code dla interfejsu graficznego do zarz\u0105dzania git i podgl\u0105dem Markdown.</p> </li> </ol>"},{"location":"pl/contribute/#praca-lokalna","title":"Praca lokalna","text":"<p>Aby m\u00f3c pracowa\u0107 lokalnie:</p> <ol> <li>Stw\u00f3rz kopi\u0119 (ang. fork) na serwisie GitHub.</li> <li>Na lokalnym PC nawiguj do folderu, w kt\u00f3rym chcesz sklonowa\u0107 kopi\u0119 repozytorium, oraz otw\u00f3rz okno konsoli wewn\u0105trz niego.</li> <li> <p>Sklonuj kopi\u0119 repozytorium, korzystaj\u0105c z tego polecenia:</p> <pre><code>git clone https://github.com/user-name/forked-repository-name.git &lt;DIR-PATH&gt;\n</code></pre> <p>Zamiast <code>https://github.com/user-name/forked-repository-name.git</code> skorzystaj z w\u0142asnego linku, kt\u00f3ry jest widoczny po klikni\u0119ciu zielonego przycisku <code>&lt;&gt; Code</code> i wybraniu zak\u0142adki <code>HTTPS</code>.    </p> <p>Zamie\u0144 <code>&lt;DIR-PATH&gt;</code> ze \u015bcie\u017ck\u0105 do folderu, do kt\u00f3rego ma by\u0107 sklonowane repozytorium albo <code>.</code> je\u017celi ju\u017c jeste\u015b wewn\u0105trz folderu gdzie pliki projektu maj\u0105 si\u0119 znajdowa\u0107.</p> <p>To automatycznie utworzy zdalne repozytorium <code>origin</code> skierowane wzgl\u0119dem twojej kopii.</p> </li> <li> <p>Dodaj zdalne repozytorium <code>upstream</code> korzystaj\u0105c z tego polecenia:</p> <pre><code>git remote add upstream https://github.com/Gothic-Modding-Community/gmc.git\n</code></pre> </li> <li> <p>(opcjonalne) Stw\u00f3rz wirtualne \u015brodowisko i aktywuj je.</p> <p>Je\u017celi pracujesz przy kilku projektach Python, warto stworzy\u0107 wirtualne \u015brodowisko (ang. Virtual Environment) dla ka\u017cdego z tych projekt\u00f3w, \u017ceby ka\u017cdy m\u00f3g\u0142 korzysta\u0107 z w\u0142asnego folderu bibliotek z zainstalowanymi modu\u0142ami/wtyczkami.</p> <pre><code>python -m venv venv\n</code></pre> <p>To utworzy folder <code>venv</code> wewn\u0105trz obecnie wybranego folderu w oknie konsoli. Prosz\u0119, zostaw t\u0119 nazw\u0119, poniewa\u017c jest dodana do pliku <code>.gitignore</code> projektu.</p> <p>Zale\u017cnie od systemu, skorzystaj z jednego z tych polece\u0144 do aktywacji wirtualnego \u015brodowiska.</p> <p></p>Linux / macOS<pre><code>source venv/bin/activate\n</code></pre> Windows Powershell<pre><code>venv\\Scripts\\activate.ps1\n</code></pre> Windows Konsola Polece\u0144 (cmd)<pre><code>venv\\Scripts\\activate.bat\n</code></pre> <p>Po aktywacji indykator <code>(venv)</code> b\u0119dzie wy\u015bwietlany przy nazwie folderu w oknie polece\u0144.</p> <p>Nie zamykaj okna polece\u0144</p> <p>Wirtualne \u015brodowisko musi by\u0107 ponownie aktywowane, przy ka\u017cdym otwarciu okna polece\u0144.</p> </li> <li> <p>Zainstaluj MkDocs wraz z wtyczkami korzystaj\u0105c z tego polecenia:</p> <pre><code>pip install -r requirements.txt\n</code></pre> <p>To zainstaluje wszystkie zale\u017cno\u015bci.</p> </li> <li> <p>Pobierz (ang. fetch) stan historii git z repozytorium <code>upstream</code> korzystaj\u0105c z tego polecenia:</p> <pre><code>git fetch upstream\n</code></pre> </li> <li> <p>Otw\u00f3rz (ang. checkout) lokaln\u0105 ga\u0142\u0105\u017a opieraj\u0105c\u0105 si\u0119 o ga\u0142\u0105\u017a <code>dev</code> repozytorium <code>upstream</code> korzystaj\u0105c z tego polecenia:</p> <pre><code>git checkout -b name-of-branch --track upstream/dev\n</code></pre> <p>W miejscu <code>name-of-branch</code> podaj kr\u00f3tk\u0105 nazw\u0119 po angielsku. Odpowiedni\u0105 nazw\u0105 ga\u0142\u0119zi jest albo nazwa funkcjonalno\u015bci, albo kr\u00f3tki opis wprowadzonych zmian np. <code>3ds-articles</code>, <code>fix-typos-for-contribution</code>. Nie musz\u0105 by\u0107 zbyt skomplikowane, do 4 s\u0142\u00f3w wystarczy.</p> </li> <li> <p>Uruchom serwer ze zbudowan\u0105 stron\u0105 projektu, korzystaj\u0105c z tego polecenia:</p> <pre><code>mkdocs serve\n</code></pre> <p>Odwied\u017a lokaln\u0105 stron\u0119 pod tym adresem <code>http://127.0.0.1:8000/gmc/</code>. Po ka\u017cdej zmianie w plikach projektu strona automatycznie si\u0119 przebuduje i po chwili przegl\u0105darka automatycznie si\u0119 od\u015bwie\u017cy.</p> <p>Serwer mo\u017ce by\u0107 zamkni\u0119ty poprzez skorzystanie ze skr\u00f3tu klawiszowego <code>Control-C</code> w trakcie gdy okno polece\u0144 jest aktywne.</p> </li> <li> <p>Je\u017celi uko\u0144czysz fragment swojej pracy, dodaj pliki i wstaw wpis do historii gita (ang. commit) korzystaj\u0105c z tego polecenia:</p> <pre><code>git add .\ngit commit -m \"add 3 articles about ZenGin\"\n</code></pre> <p>Jak wida\u0107 wiadomo\u015b\u0107 (ang. message) / nazwa do wpisu historii r\u00f3wnie\u017c powinna by\u0107 w j\u0119zyku angielskim. Odpowiedni\u0105 wiadomo\u015bci\u0105 jest zdanie opisuj\u0105ce zmiany.</p> </li> <li> <p>Po sko\u0144czeniu wszystkich prac wy\u015blij (ang. push) swoj\u0105 ga\u0142\u0105\u017a do zdalnego repozytorium <code>origin</code>, korzystaj\u0105c z tego polecenia:</p> <pre><code>git push origin name-of-branch\n</code></pre> </li> <li> <p>Stw\u00f3rz pro\u015bb\u0119 o po\u0142\u0105czenie (ang. pull request) wzgl\u0119dem odpowiedniej ga\u0142\u0119zi.</p> <p>Po wys\u0142aniu lokalnej ga\u0142\u0119zi do zdalnego repozytorium <code>origin</code> w oknie polece\u0144 b\u0119dzie dost\u0119pne \u0142\u0105cze, kt\u00f3re otworzy stron\u0119 tworzenia pro\u015bby o po\u0142\u0105czenie. Upewnij si\u0119, \u017ce jest skierowana wzgl\u0119dem ga\u0142\u0119zi <code>dev</code> oraz, \u017ce posiada wszystkie wprowadzone zmiany.</p> </li> <li> <p>Kolejna kontrybucja:</p> <p>Przed kolejn\u0105 kontrybucj\u0105, zawsze skorzystaj z tego polecenia: </p><pre><code>git fetch upstream \n</code></pre> \u017ceby mie\u0107 pewno\u015b\u0107, \u017ce posiadasz najnowsz\u0105 histori\u0119 zmian z repozytorium <code>upstream</code>. Nast\u0119pnie pod\u0105\u017caj ponownie od 8. podpunktu i zawsze tw\u00f3rz now\u0105 ga\u0142\u0105\u017a przed wprowadzeniem zmian. <pre><code>git status\n</code></pre> <p>Tym poleceniem mo\u017cesz sprawdzi\u0107, czy nie masz \u017cadnych zmian w strukturze projektu wzgl\u0119dem repozytorium <code>upstream</code>.</p> </li> </ol>"},{"location":"pl/contribute/#preferencje-budowy-strony","title":"Preferencje budowy strony","text":"<p>Podczas pracy z projektem mo\u017cna ustawi\u0107 r\u00f3\u017cne zmienne \u015brodowiskowe, \u017ceby przystosowa\u0107 konfiguracj\u0119 do w\u0142asnych preferencji:</p> <ul> <li><code>GMC_DEV_LOCALE</code> - to dwuznakowy identyfikator j\u0119zyka (np. <code>en</code>, <code>pl</code>), ustawia j\u0119zyk testowy. To ustawi ten j\u0119zyki jako domy\u015blny oraz jedyny renderowany podczas budowy strony. Pomaga w zmniejszeniu czasu budowy strony oraz pozwala na \u0142atwe zmienianie j\u0119zyka zamiast modyfikowania pliku konfiguracyjnego. Przez zmiany w pluginie <code>mkdocs-static-i18n</code> jest to jedyny spos\u00f3b na tymczasow\u0105 zmian\u0119 domy\u015blnego j\u0119zyka</li> <li><code>GMC_BUILD_ALTERNATES</code> - warto\u015b\u0107 <code>True</code> albo <code>False</code>, aktywuje budowanie strony wraz z alternatywnymi j\u0119zykami. Domy\u015blnie alternatywne j\u0119zyki s\u0105 pomijane, aby zmenijszy\u0107 czas budowy strony. </li> <li><code>GMC_ENABLE_ON_PUBLISH</code> - warto\u015b\u0107 <code>True</code> albo <code>False</code>, aktywuje wszystkie finalne procesy, jak dodanie daty ostatniej aktualizacji, minimalizacja zasob\u00f3w itp. </li> </ul> <p>Dla otwartego okna polece\u0144 mo\u017cna tymczasowo je ustawi\u0107:</p> Linux<pre><code>export GMC_DEV_LOCALE=en export GMC_BUILD_ALTERNATES=False; mkdocs serve\n</code></pre> Windows Powershell<pre><code>$env:GMC_DEV_LOCALE=\"en\"\n$env:GMC_BUILD_ALTERNATES=\"False\"\nmkdocs serve\n</code></pre> Windows Konsola Polece\u0144 (cmd)<pre><code>set GMC_DEV_LOCALE=en\nset GMC_BUILD_ALTERNATES=False\nmkdocs serve\n</code></pre>"},{"location":"pl/contribute/#wydajno\u015b\u0107-budowy-strony","title":"Wydajno\u015b\u0107 budowy strony","text":"<p>Aby przy\u015bpieszy\u0107 proces budowy strony podczas pracy, upewnij si\u0119, \u017ce tylko 1 j\u0119zyk jest budowany i rozwa\u017c u\u017cycie opcji <code>--dirtyreload</code>:</p> <pre><code>mkdocs serve --dirtyreload\n</code></pre> <p>To sprawi, \u017ce tylko zmienione pliki <code>.md</code> b\u0119d\u0105 na nowo budowane. Jednak\u017ce, zmiany plik\u00f3w szablonowych (ang. template) w folderze <code>overrides</code> nie b\u0119d\u0105 widoczne, poniewa\u017c takie zmiany wymagaj\u0105 pe\u0142nej przebudowy.</p>"},{"location":"pl/contribute/#prze\u015blij-plik","title":"Prze\u015blij plik","text":"<p>Je\u017celi praca z git albo Markdown jest nieprzyst\u0119pna lub niemo\u017cliwa to mo\u017cesz przes\u0142a\u0107 plik w formacie Google Docs na serwer Discord GMC, sformatujemy go i dodamy tre\u015b\u0107 do strony.</p> <p>Tylko nowa zawarto\u015b\u0107 po angielsku</p> <p>Ta opcja jest ograniczona tylko dla nowej tre\u015bci w j\u0119zyku angielskim. Nie mo\u017cemy wykorzysta\u0107 tego sposobu dla t\u0142umacze\u0144. Dla t\u0142umacze\u0144 wy\u015blij przet\u0142umaczony plik <code>.md</code> poprzez zg\u0142oszenie, je\u017celi nie chcesz pracowa\u0107 bezpo\u015brednio z git, ani doda\u0107 pliku poprzez interfejs GitHub.</p>"},{"location":"pl/contribute/#translations","title":"T\u0142umaczenia","text":"<p>\u017beby dostarczy\u0107 wsparcie dla wielu j\u0119zyk\u00f3w, nasza strona korzysta ze wtyczki MkDocs i18n.</p>"},{"location":"pl/contribute/#dodaj-wsparcie-dla-nowego-j\u0119zyka","title":"Dodaj wsparcie dla nowego j\u0119zyka","text":"<p>\u017beby wspiera\u0107 nowy j\u0119zyk, musi by\u0107 dodany:</p> <p>Wci\u0119cia maj\u0105 znaczenie</p> <p>Musisz zachowa\u0107 poprawn\u0105 ilo\u015b\u0107 wci\u0119\u0107, czyli odst\u0119p\u00f3w mi\u0119dzy wpisami.</p> <ol> <li> <p>W konfiguracji <code>mkdocs.yml</code>, w tym przyk\u0142adzie dodajemy j\u0119zyk <code>xx</code>:</p> <pre><code>plugins:\n  - i18n:\n      # ...\n      languages:\n        en:\n          name: en - English\n          build: true\n        xx:\n          name: xx - Language Name\n          build: true\n</code></pre> </li> <li> <p>W pliku <code>overrides/main.html</code>, \u017ceby doda\u0107 tekst og\u0142oszenia dla zawarto\u015bci nieprzet\u0142umaczonej:</p> <pre><code>{%\n    set announcement = {\n        \"en\": \"This page has not yet been translated into LANGUAGE, therefore it is displayed in English.\",\n        \"xx\": \"yyy\",\n    }\n%}\n{%\n    set call_to_action = {\n        \"en\": \"Support us and translate!\",\n        \"xx\": \"yyy\",\n    }\n%}\n</code></pre> </li> <li> <p>Odwied\u017a oficjaln\u0105 stron\u0119 sk\u00f3rki.     Upewnij si\u0119, \u017ce t\u0142umaczenie sk\u00f3rki jest tam kompletne. Je\u017celi nie jest, pod\u0105\u017caj wed\u0142ug poradnika kontrybucji sk\u00f3rki i wr\u00f3\u0107 tutaj, nie trzeba czeka\u0107 na zmiany w sk\u00f3rce.</p> </li> </ol>"},{"location":"pl/contribute/#dodaj-przet\u0142umaczone-strony","title":"Dodaj przet\u0142umaczone strony","text":"<p>Ka\u017cdy plik <code>.md</code> w folderze <code>docs</code> mo\u017ce mie\u0107 przet\u0142umaczon\u0105 wersj\u0119. \u017beby doda\u0107 t\u0142umaczenie strony dla danego j\u0119zyka, stw\u00f3rz kopi\u0119 strony z dodan\u0105 ko\u0144c\u00f3wk\u0105 tego j\u0119zyka.  Na przyk\u0142ad <code>index.md</code> b\u0119dzie <code>index.xx.md</code> dla j\u0119zyka <code>xx</code> bazuj\u0105c na ustawieniach z pliku <code>mkdocs.yml</code>.</p> <p>Ka\u017cdy nieprzet\u0142umaczony artyku\u0142 posiada przycisk  w g\u00f3rnym prawym rogu obok tytu\u0142u. Pozwala na szybkie dodanie t\u0142umaczenia poprzez interfejs serwisu GitHub bez potrzeby konfiguracji plik\u00f3w lokalnie.</p>"},{"location":"pl/genome/","title":"Genome Engine","text":""},{"location":"pl/genome/#genome-engine","title":"Genome Engine","text":"<p>Genome Engine to nowy silnik autorstwa Piranha Bytes stworzony na potrzeby gry Gothic 3, a nast\u0119pnie wykorzystany w serii gier Risen i ELEX.</p>"},{"location":"cs/","title":"V\u00edtejte na str\u00e1nce Gothic Modding Community","text":""},{"location":"cs/#v\u00edtejte-na-str\u00e1nce-gothic-modding-community","title":"V\u00edtejte na str\u00e1nce Gothic Modding Community","text":"<p>Tato Github str\u00e1nka obsahuje komunitou vytvo\u0159en\u00e9 a udr\u017eovan\u00e9 \u010dl\u00e1nky, n\u00e1vody a dokumentaci o v\u0161em, co se t\u00fdk\u00e1 her Gothic.</p> <p>Prvn\u00ed dv\u011b hry s\u00e9rie Gothic b\u011b\u017e\u00ed na enginu, kter\u00fd se jmenuje ZenGin, vyvinut\u00e9m studiem Piranha Bytes a skupinou program\u00e1tor\u016f Mad Scientists. Pokud se chcete o historii v\u00fdvoje dozv\u011bd\u011bt v\u00edce, hromadu informac\u00ed m\u016f\u017eete naj\u00edt na str\u00e1nce Gothic Archive.</p> <p>Obsah t\u00e9to str\u00e1nky by nem\u011bl b\u00fdt br\u00e1n jako jedin\u00fd validn\u00ed zp\u016fsob moddingu. Jsme pouze nad\u0161enci, kte\u0159\u00ed sd\u00edl\u00ed sv\u00e9 zku\u0161enosti, znalosti a na\u0161e nejobl\u00edben\u011bj\u0161\u00ed postupy.</p> <p>Nev\u00e1hejte otev\u0159\u00edt pull request s va\u0161\u00edm \u010dl\u00e1nkem nebo n\u00e1vrhy na zm\u011bny.</p> <p>Pull request m\u016f\u017eete otev\u0159\u00edt v tomto repozit\u00e1\u0159i.</p>"}]}